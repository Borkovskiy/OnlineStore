{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Diplom project/online-store/src/components/section/Payment/FormInput.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const formInput = ({\n  name,\n  label,\n  required,\n  options\n}) => {\n  _s();\n\n  const {\n    control\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: control,\n      required: required,\n      render: props => /*#__PURE__*/_jsxDEV(Select, {\n        value: props.value,\n        onChange: e => props.onChange(e.target.value),\n        fullWidth: true,\n        children: options.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.value,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}; // The usage (in this case I did it with cities, but it can be used with anything)\n\n_s(formInput, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n\nconst cityOptions = [{\n  name: 'São Paulo',\n  value: 'sao paulo'\n}, {\n  name: 'Rio de Janeiro',\n  value: 'rio de janeiro'\n}, {\n  name: 'Brasília',\n  value: 'brasilia'\n}, {\n  name: 'Jundiai',\n  value: 'jundiai'\n}];\n\n/*#__PURE__*/\n_jsxDEV(CustomSelectField, {\n  required: true,\n  name: \"selectCity\",\n  label: \"Cidade\",\n  options: cityOptions\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 1\n}, this);","map":{"version":3,"sources":["/Users/macuser/Desktop/Diplom project/online-store/src/components/section/Payment/FormInput.js"],"names":["React","Grid","InputLabel","MenuItem","Select","Controller","useFormContext","formInput","name","label","required","options","control","props","value","e","onChange","target","map","item","cityOptions"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,MAJF,QAKO,mBALP;AAMA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,iBAA3C;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AAAA;;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAcN,cAAc,EAAlC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA,4BACE,QAAC,UAAD;AAAA,gBAAaG;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AACE,MAAA,IAAI,EAAED,IADR;AAEE,MAAA,OAAO,EAAEI,OAFX;AAGE,MAAA,QAAQ,EAAEF,QAHZ;AAIE,MAAA,MAAM,EAAGG,KAAD,iBACN,QAAC,MAAD;AACE,QAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,QAAA,QAAQ,EAAGC,CAAD,IAAOF,KAAK,CAACG,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASH,KAAxB,CAFnB;AAGE,QAAA,SAAS,MAHX;AAAA,kBAKGH,OAAO,CAACO,GAAR,CAAaC,IAAD,iBACX,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,IAAI,CAACL,KAAtB;AAAA,oBAA8BK,IAAI,CAACX;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADD;AALH;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxBM,C,CA2BP;;GA3BaD,S;UACSD,c;;;AA2BtB,MAAMc,WAAW,GAAG,CAClB;AAAEZ,EAAAA,IAAI,EAAE,WAAR;AAAqBM,EAAAA,KAAK,EAAE;AAA5B,CADkB,EAElB;AAAEN,EAAAA,IAAI,EAAE,gBAAR;AAA0BM,EAAAA,KAAK,EAAE;AAAjC,CAFkB,EAGlB;AAAEN,EAAAA,IAAI,EAAE,UAAR;AAAoBM,EAAAA,KAAK,EAAE;AAA3B,CAHkB,EAIlB;AAAEN,EAAAA,IAAI,EAAE,SAAR;AAAmBM,EAAAA,KAAK,EAAE;AAA1B,CAJkB,CAApB;;AAOA;AAAA,QAAC,iBAAD;AACE,EAAA,QAAQ,MADV;AAEE,EAAA,IAAI,EAAC,YAFP;AAGE,EAAA,KAAK,EAAC,QAHR;AAIE,EAAA,OAAO,EAAEM;AAJX;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nexport const formInput = ({ name, label, required, options }) => {\n  const { control } = useFormContext();\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <InputLabel>{label}</InputLabel>\n      <Controller\n        name={name}\n        control={control}\n        required={required}\n        render={(props) => (\n          <Select\n            value={props.value}\n            onChange={(e) => props.onChange(e.target.value)}\n            fullWidth\n          >\n            {options.map((item) => (\n              <MenuItem value={item.value}>{item.name}</MenuItem>\n            ))}\n          </Select>\n        )}\n      />\n    </Grid>\n  );\n};\n\n\n// The usage (in this case I did it with cities, but it can be used with anything)\nconst cityOptions = [\n  { name: 'São Paulo', value: 'sao paulo' },\n  { name: 'Rio de Janeiro', value: 'rio de janeiro' },\n  { name: 'Brasília', value: 'brasilia' },\n  { name: 'Jundiai', value: 'jundiai' },\n];\n\n<CustomSelectField\n  required\n  name=\"selectCity\"\n  label=\"Cidade\"\n  options={cityOptions}\n/>"]},"metadata":{},"sourceType":"module"}