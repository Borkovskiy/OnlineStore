{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Diplom project/online-store/src/components/section/Payment/AddressForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { InputLabel, Select, MuneItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './FormInput';\nimport { Country, City } from 'country-state-city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageContext = /*#__PURE__*/React.createContext();\nexport const PageContextProvider = props => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [location, setLocation] = useState({\n    country: '',\n    city: ''\n  });\n  useEffect(() => {\n    setCountries(Country.getAllCountries());\n  }, []);\n\n  const selectCountry = e => {\n    var _countries$filter$;\n\n    let value = e.target.value;\n    setSelectedCountry(value);\n    setCities(City.getCitiesOfCountry(value));\n    let countryName = (_countries$filter$ = countries.filter(el => el.isoCode === value)[0]) === null || _countries$filter$ === void 0 ? void 0 : _countries$filter$.name;\n    setLocation({ ...location,\n      country: countryName,\n      city: ''\n    });\n  };\n\n  const selectCity = e => {\n    setLocation({ ...location,\n      city: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageContext.Provider, {\n    value: {\n      location,\n      setLocation\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: 'mt-2',\n      children: \"Please select your location:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: selectCountry,\n      className: 'my-3',\n      children: countries.map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: el.isoCode,\n        children: el.name\n      }, el.isoCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), selectedCountry ? /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: selectCity,\n      children: cities.map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: el.name,\n        children: el.name\n      }, el.name + '_' + el.stateCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this) : '', props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PageContextProvider, \"EaJROssNAyFdcWNOQbKUreWzvfE=\");\n\n_c = PageContextProvider;\n\nconst AddressForm = () => {\n  _s2();\n\n  const methods = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"30px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: \"\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"zip\",\n            label: \"ZIP / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AddressForm, \"cLnp+zYVfnD49CnXGGXF3NvR6q8=\", false, function () {\n  return [useForm];\n});\n\n_c2 = AddressForm;\nexport default AddressForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PageContextProvider\");\n$RefreshReg$(_c2, \"AddressForm\");","map":{"version":3,"sources":["/Users/macuser/Desktop/Diplom project/online-store/src/components/section/Payment/AddressForm.js"],"names":["React","useEffect","useState","InputLabel","Select","MuneItem","Button","Grid","Typography","useForm","FormProvider","FormInput","Country","City","PageContext","createContext","PageContextProvider","props","countries","setCountries","cities","setCities","selectedCountry","setSelectedCountry","location","setLocation","country","city","getAllCountries","selectCountry","e","value","target","getCitiesOfCountry","countryName","filter","el","isoCode","name","selectCity","map","stateCode","children","AddressForm","methods","margin"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { InputLabel, Select, MuneItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './FormInput';\nimport { Country, City }  from 'country-state-city';\n\nexport const PageContext = React.createContext();\n\nexport const PageContextProvider = (props) => {\n    const [countries, setCountries] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [location, setLocation] = useState({\n        country: '',\n        city: ''\n    })\n    useEffect(() => {\n        setCountries(Country.getAllCountries());\n    }, [])\n\n    const selectCountry = e => {\n        let value = e.target.value;\n        setSelectedCountry(value);\n        setCities(City.getCitiesOfCountry(value));\n        let countryName = countries.filter(el => el.isoCode === value)[0]?.name;\n        setLocation({...location, country: countryName, city: ''})\n    }\n\n    const selectCity = e => {\n        setLocation({...location, city: e.target.value});\n    }\n\n    return <PageContext.Provider value={{location, setLocation}}>\n        <h4 className={'mt-2'}>Please select your location:</h4>\n        <select onChange={selectCountry} className={'my-3'}>\n            {countries.map(el => <option key={el.isoCode} value={el.isoCode}>{el.name}</option>)}\n        </select>\n        <br/>\n        {selectedCountry ? <select onChange={selectCity}>\n            {cities.map(el => <option key={el.name + '_' + el.stateCode} value={el.name}>{el.name}</option>)}\n        </select> : ''}\n\n        {props.children}\n    </PageContext.Provider>\n}\n\n\n\nconst AddressForm = () => {\n    const methods = useForm();\n\n    return (\n        <div style={{margin: \"30px\"}}>\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit=''>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First name' />\n                        <FormInput required name='lastName' label='Last name' /> \n                        <FormInput required name='address1' label='Address' /> \n                        <FormInput required name='email' label='Email' /> \n                        <FormInput required name='city' label='City' /> \n                        <FormInput required name='zip' label='ZIP / Postal code' />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            \n                        </Grid>\n                    </Grid>\n                </form>\n            </FormProvider>\n        </div>\n    )\n}\n\nexport default AddressForm\n"]},"metadata":{},"sourceType":"module"}