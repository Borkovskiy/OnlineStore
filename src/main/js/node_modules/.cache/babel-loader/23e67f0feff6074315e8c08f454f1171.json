{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/\\u041E\\u041A\\u041E\\u041D\\u0427\\u0410\\u0422\\u0415\\u041B\\u042C\\u041D\\u042B\\u0418\\u0306 \\u0420\\u0410\\u0411\\u041E\\u0427\\u0418\\u0418\\u0306 \\u0412\\u0410\\u0420\\u0418\\u0410\\u041D\\u0422/OnlineStore/src/main/js/src/components/Context.js\";\nimport React, { useState, useEffect } from 'react';\nimport './css/Order.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/React.createContext();\nexport class DataProvider extends Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      total: 0\n    };\n    this.fetchProducts = _s(() => {\n      _s();\n\n      const [products, setProducts] = useState([]);\n      useEffect(() => {\n        axios.get('https://online-store-120.herokuapp.com/store/products').then(res => {\n          console.log(res);\n          setProducts(res.data);\n        }).catch(err => {\n          console.log(err);\n        });\n      }, []);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${product.base64Image}`,\n            width: \"400px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    }, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n    this.addCart = id => {\n      const {\n        products,\n        cart\n      } = this.state;\n      const check = cart.every(item => {\n        return item._id !== id;\n      });\n\n      if (check) {\n        const data = products.filter(product => {\n          return product._id === id;\n        });\n        this.setState({\n          cart: [...cart, ...data]\n        });\n      } else {\n        alert(\"The product has been added to cart.\"); // <Alert severity=\"success\">The product has been added to cart.</Alert>\n      }\n    };\n\n    this.decrease = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count === 1 ? item.count = 1 : item.count -= 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.increase = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count += 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.getTotal = () => {\n      const {\n        cart\n      } = this.state;\n      const res = cart.reduce((prev, item) => {\n        return prev + item.price * item.count;\n      }, 0);\n      this.setState({\n        total: res\n      });\n    };\n\n    this.removeProduct = id => {\n      if (window.confirm(\"Do you want to delete this product?\")) {\n        const {\n          cart\n        } = this.state;\n        cart.forEach((item, index) => {\n          if (item._id === id) {\n            cart.splice(index, 1);\n          }\n        });\n        this.setState({\n          cart: cart\n        });\n        this.getTotal();\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\n    localStorage.setItem('dataTotal', JSON.stringify(this.state.total));\n  }\n\n  componentDidMount() {\n    const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n\n    if (dataCart !== null) {\n      this.setState({\n        cart: dataCart\n      });\n    }\n\n    const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n\n    if (dataTotal !== null) {\n      this.setState({\n        total: dataTotal\n      });\n    }\n  }\n\n  render() {\n    const {\n      products,\n      cart,\n      total\n    } = this.state;\n    const {\n      addCart,\n      decrease,\n      increase,\n      removeProduct,\n      getTotal\n    } = this;\n    return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        products,\n        addCart,\n        cart,\n        decrease,\n        increase,\n        removeProduct,\n        total,\n        getTotal\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/macuser/Desktop/ОКОНЧАТЕЛЬНЫЙ РАБОЧИЙ ВАРИАНТ/OnlineStore/src/main/js/src/components/Context.js"],"names":["React","useState","useEffect","DataContext","createContext","DataProvider","Component","state","products","cart","total","fetchProducts","setProducts","axios","get","then","res","console","log","data","catch","err","map","product","base64Image","name","id","addCart","check","every","item","_id","filter","setState","alert","decrease","forEach","count","getTotal","increase","reduce","prev","price","removeProduct","window","confirm","index","splice","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","dataCart","parse","getItem","dataTotal","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;;AAGA,OAAO,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;AAEP,OAAO,MAAMC,YAAN,SAA2BC,SAA3B,CAAqC;AAAA;AAAA;;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAFgC;AAAA,SAQxCC,aARwC,MAQxB,MAAM;AAAA;;AAClB,YAAM,CAACH,QAAD,EAAWI,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACAC,MAAAA,SAAS,CAAC,MAAM;AACZW,QAAAA,KAAK,CAACC,GAAN,CAAU,uDAAV,EAAmEC,IAAnE,CAAwEC,GAAG,IAAI;AAC3EC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,UAAAA,WAAW,CAACI,GAAG,CAACG,IAAL,CAAX;AACH,SAHD,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACVJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,SANL;AAOH,OARQ,EAQN,EARM,CAAT;AASA,0BACI;AAAA,kBAEQb,QAAQ,CAACc,GAAT,CAAaC,OAAO,iBAChB;AAAA,kCACI;AAAK,YAAA,GAAG,EAAG,0BAAyBA,OAAO,CAACC,WAAY,EAAxD;AAA2D,YAAA,KAAK,EAAE;AAAlE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAMD,OAAO,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUF,OAAO,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ;AA6BK,KAhD+B;;AAAA,SA0DxCC,OA1DwC,GA0D7BD,EAAD,IAAQ;AACd,YAAM;AAAElB,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAqB,KAAKF,KAAhC;AACA,YAAMqB,KAAK,GAAGnB,IAAI,CAACoB,KAAL,CAAWC,IAAI,IAAI;AAC7B,eAAOA,IAAI,CAACC,GAAL,KAAaL,EAApB;AACH,OAFa,CAAd;;AAGA,UAAIE,KAAJ,EAAW;AACP,cAAMT,IAAI,GAAGX,QAAQ,CAACwB,MAAT,CAAgBT,OAAO,IAAI;AACpC,iBAAOA,OAAO,CAACQ,GAAR,KAAgBL,EAAvB;AACH,SAFY,CAAb;AAGA,aAAKO,QAAL,CAAc;AAAExB,UAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,GAAGU,IAAb;AAAR,SAAd;AACH,OALD,MAKO;AACHe,QAAAA,KAAK,CAAC,qCAAD,CAAL,CADG,CAEH;AACH;AACJ,KAxEuC;;AAAA,SA0ExCC,QA1EwC,GA0E7BT,EAAE,IAAI;AACb,YAAM;AAAEjB,QAAAA;AAAF,UAAW,KAAKF,KAAtB;AACAE,MAAAA,IAAI,CAAC2B,OAAL,CAAaN,IAAI,IAAI;AACjB,YAAIA,IAAI,CAACC,GAAL,KAAaL,EAAjB,EAAqB;AACjBI,UAAAA,IAAI,CAACO,KAAL,KAAe,CAAf,GAAmBP,IAAI,CAACO,KAAL,GAAa,CAAhC,GAAoCP,IAAI,CAACO,KAAL,IAAc,CAAlD;AACH;AACJ,OAJD;AAKA,WAAKJ,QAAL,CAAc;AAAExB,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACA,WAAK6B,QAAL;AACH,KAnFuC;;AAAA,SAqFxCC,QArFwC,GAqF7Bb,EAAE,IAAI;AACb,YAAM;AAAEjB,QAAAA;AAAF,UAAW,KAAKF,KAAtB;AACAE,MAAAA,IAAI,CAAC2B,OAAL,CAAaN,IAAI,IAAI;AACjB,YAAIA,IAAI,CAACC,GAAL,KAAaL,EAAjB,EAAqB;AACjBI,UAAAA,IAAI,CAACO,KAAL,IAAc,CAAd;AACH;AACJ,OAJD;AAKA,WAAKJ,QAAL,CAAc;AAAExB,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACA,WAAK6B,QAAL;AACH,KA9FuC;;AAAA,SAgGxCA,QAhGwC,GAgG7B,MAAM;AACb,YAAM;AAAE7B,QAAAA;AAAF,UAAW,KAAKF,KAAtB;AACA,YAAMS,GAAG,GAAGP,IAAI,CAAC+B,MAAL,CAAY,CAACC,IAAD,EAAOX,IAAP,KAAgB;AACpC,eAAOW,IAAI,GAAIX,IAAI,CAACY,KAAL,GAAaZ,IAAI,CAACO,KAAjC;AACH,OAFW,EAET,CAFS,CAAZ;AAGA,WAAKJ,QAAL,CAAc;AAAEvB,QAAAA,KAAK,EAAEM;AAAT,OAAd;AACH,KAtGuC;;AAAA,SAwGxC2B,aAxGwC,GAwGxBjB,EAAE,IAAI;AAClB,UAAIkB,MAAM,CAACC,OAAP,CAAe,qCAAf,CAAJ,EAA2D;AACvD,cAAM;AAAEpC,UAAAA;AAAF,YAAW,KAAKF,KAAtB;AACAE,QAAAA,IAAI,CAAC2B,OAAL,CAAa,CAACN,IAAD,EAAOgB,KAAP,KAAiB;AAC1B,cAAIhB,IAAI,CAACC,GAAL,KAAaL,EAAjB,EAAqB;AACjBjB,YAAAA,IAAI,CAACsC,MAAL,CAAYD,KAAZ,EAAmB,CAAnB;AACH;AACJ,SAJD;AAKA,aAAKb,QAAL,CAAc;AAAExB,UAAAA,IAAI,EAAEA;AAAR,SAAd;AACA,aAAK6B,QAAL;AACH;AACJ,KAnHuC;AAAA;;AAqHxCU,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAe,KAAK7C,KAAL,CAAWE,IAA1B,CAAjC;AACAwC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe,KAAK7C,KAAL,CAAWG,KAA1B,CAAlC;AACH;;AAED2C,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,UAArB,CAAX,CAAjB;;AACA,QAAIF,QAAQ,KAAK,IAAjB,EAAuB;AACnB,WAAKrB,QAAL,CAAc;AAAExB,QAAAA,IAAI,EAAE6C;AAAR,OAAd;AACH;;AAED,UAAMG,SAAS,GAAGN,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAX,CAAlB;;AACA,QAAIC,SAAS,KAAK,IAAlB,EAAwB;AACpB,WAAKxB,QAAL,CAAc;AAAEvB,QAAAA,KAAK,EAAE+C;AAAT,OAAd;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAElD,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKH,KAAvC;AACA,UAAM;AAAEoB,MAAAA,OAAF;AAAWQ,MAAAA,QAAX;AAAqBI,MAAAA,QAArB;AAA+BI,MAAAA,aAA/B;AAA8CL,MAAAA;AAA9C,QAA2D,IAAjE;AACA,wBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAE9B,QAAAA,QAAF;AAAYmB,QAAAA,OAAZ;AAAqBlB,QAAAA,IAArB;AAA2B0B,QAAAA,QAA3B;AAAqCI,QAAAA,QAArC;AAA+CI,QAAAA,aAA/C;AAA8DjC,QAAAA,KAA9D;AAAqE4B,QAAAA;AAArE,OAA7B;AAAA,gBACK,KAAKqB,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA9IuC","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/Order.css';\n\n\nexport const DataContext = React.createContext();\n\nexport class DataProvider extends Component {\n\n    state = {\n        products: [],\n        cart: [],\n        total: 0\n    }\n\n    fetchProducts = () => {\n        const [products, setProducts] = useState([])\n        useEffect(() => {\n            axios.get('https://online-store-120.herokuapp.com/store/products').then(res => {\n                console.log(res)\n                setProducts(res.data)\n            })\n                .catch(err => {\n                    console.log(err)\n                })\n        }, [])\n        return (\n            <div>\n                {\n                    products.map(product => (\n                        <div key={product.id}>\n                            <img src={`data:image/jpeg;base64,${product.base64Image}`} width={\"400px\"} />\n                            <div>{product.name}</div>\n                        </div>\n                    ))\n                }\n                {/* {\n                    products.map(product => (\n                        <div className=\"card\" key={product._id}>\n                            <Link to={`/product/${product._id}`}>\n                                <img src={product.src[0]} alt=\"\" />\n                            </Link>\n                            <div className=\"content\">\n                                <h3>\n                                    <Link to={`/product/${product._id}`}>{product.title}</Link>\n                                </h3>\n                                <p>{product.description}</p>\n                                <span>${product.price}</span><br />\n                                <button onClick={() => this.context.addCart(product._id)}>Add to cart</button>\n                            </div>\n                        </div>\n                    ))\n                } */}\n            </div>\n        )\n            }\n\n    // fetchProducts = () => {\n    //     fetch('https://online-store-120.herokuapp.com/store/products')\n    //     .then((response) => response.json())\n    //     .then(data => {\n    //         console.log({ products: data});\n    //     });\n    // }\n\n    addCart = (id) => {\n        const { products, cart } = this.state;\n        const check = cart.every(item => {\n            return item._id !== id\n        })\n        if (check) {\n            const data = products.filter(product => {\n                return product._id === id\n            })\n            this.setState({ cart: [...cart, ...data] })\n        } else {\n            alert(\"The product has been added to cart.\")\n            // <Alert severity=\"success\">The product has been added to cart.</Alert>\n        }\n    };\n\n    decrease = id => {\n        const { cart } = this.state;\n        cart.forEach(item => {\n            if (item._id === id) {\n                item.count === 1 ? item.count = 1 : item.count -= 1;\n            }\n        })\n        this.setState({ cart: cart });\n        this.getTotal();\n    }\n\n    increase = id => {\n        const { cart } = this.state;\n        cart.forEach(item => {\n            if (item._id === id) {\n                item.count += 1;\n            }\n        })\n        this.setState({ cart: cart });\n        this.getTotal();\n    }\n\n    getTotal = () => {\n        const { cart } = this.state;\n        const res = cart.reduce((prev, item) => {\n            return prev + (item.price * item.count);\n        }, 0)\n        this.setState({ total: res })\n    }\n\n    removeProduct = id => {\n        if (window.confirm(\"Do you want to delete this product?\")) {\n            const { cart } = this.state;\n            cart.forEach((item, index) => {\n                if (item._id === id) {\n                    cart.splice(index, 1)\n                }\n            })\n            this.setState({ cart: cart })\n            this.getTotal();\n        }\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n    }\n\n    componentDidMount() {\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n        if (dataCart !== null) {\n            this.setState({ cart: dataCart });\n        }\n\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n        if (dataTotal !== null) {\n            this.setState({ total: dataTotal });\n        }\n    }\n\n    render() {\n        const { products, cart, total } = this.state;\n        const { addCart, decrease, increase, removeProduct, getTotal } = this;\n        return (\n            <DataContext.Provider value={{ products, addCart, cart, decrease, increase, removeProduct, total, getTotal }}>\n                {this.props.children}\n            </DataContext.Provider>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}