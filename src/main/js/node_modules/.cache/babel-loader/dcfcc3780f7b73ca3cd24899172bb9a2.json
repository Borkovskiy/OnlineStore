{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Diplom project/online-store/src/components/section/Payment/AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Country, City } from 'country-state-city';\nimport FormInput from './FormInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = props => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [location, setLocation] = useState({\n    country: '',\n    city: ''\n  });\n  useEffect(() => {\n    setCountries(Country.getAllCountries());\n  }, []);\n\n  const selectCountry = e => {\n    var _countries$filter$;\n\n    let value = e.target.value;\n    setSelectedCountry(value);\n    setCities(City.getCitiesOfCountry(value));\n    let countryName = (_countries$filter$ = countries.filter(el => el.isoCode === value)[0]) === null || _countries$filter$ === void 0 ? void 0 : _countries$filter$.name;\n    setLocation({ ...location,\n      country: countryName,\n      city: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"30px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: \"\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"zip\",\n            label: \"ZIP / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"countries\",\n              id: \"select\",\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddressForm, \"EaJROssNAyFdcWNOQbKUreWzvfE=\");\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/Users/macuser/Desktop/Diplom project/online-store/src/components/section/Payment/AddressForm.js"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","Country","City","FormInput","AddressForm","props","countries","setCountries","cities","setCities","selectedCountry","setSelectedCountry","location","setLocation","country","city","getAllCountries","selectCountry","e","value","target","getCitiesOfCountry","countryName","filter","el","isoCode","name","margin","methods"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Country, City }  from 'country-state-city';\n\nimport FormInput from './FormInput';\n\nconst AddressForm = props => {\n    const [countries, setCountries] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [location, setLocation] = useState({\n        country: '',\n        city: ''\n    })\n    useEffect(() => {\n        setCountries(Country.getAllCountries());\n    }, [])\n\n    const selectCountry = e => {\n        let value = e.target.value;\n        setSelectedCountry(value);\n        setCities(City.getCitiesOfCountry(value));\n        let countryName = countries.filter(el => el.isoCode === value)[0]?.name;\n        setLocation({...location, country: countryName, city: ''})\n    }\n\n    return (\n        <div style={{ margin: \"30px\" }}>\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit=''>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First name' />\n                        <FormInput required name='lastName' label='Last name' />\n                        <FormInput required name='address1' label='Address' />\n                        <FormInput required name='email' label='Email' />\n                        <FormInput required name='city' label='City' />\n                        <FormInput required name='zip' label='ZIP / Postal code' />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select labelId=\"countries\" id=\"select\">\n                                <MenuItem></MenuItem>\n                            </Select>\n                        </Grid>\n                    </Grid>\n                </form>\n            </FormProvider>\n        </div>\n    )\n}\n\nexport default AddressForm\n"]},"metadata":{},"sourceType":"module"}