{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/\\u041E\\u041A\\u041E\\u041D\\u0427\\u0410\\u0422\\u0415\\u041B\\u042C\\u041D\\u042B\\u0418\\u0306 \\u0420\\u0410\\u0411\\u041E\\u0427\\u0418\\u0418\\u0306 \\u0412\\u0410\\u0420\\u0418\\u0410\\u041D\\u0422/OnlineStore/src/main/js/src/components/Context.js\";\nimport React, { Component } from 'react';\nimport './css/Order.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/React.createContext();\nexport class DataProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      total: 0\n    };\n\n    this.fetchProducts = () => {\n      fetch('https://online-store-120.herokuapp.com/store/products').then(response => response.json()).then(data => {\n        console.log({\n          products: data\n        });\n      });\n    };\n\n    this.addCart = id => {\n      const {\n        products,\n        cart\n      } = this.state;\n      const check = cart.every(item => {\n        return item._id !== id;\n      });\n\n      if (check) {\n        const data = products.filter(product => {\n          return product._id === id;\n        });\n        this.setState({\n          cart: [...cart, ...data]\n        });\n      } else {\n        alert(\"The product has been added to cart.\"); // <Alert severity=\"success\">The product has been added to cart.</Alert>\n      }\n    };\n\n    this.decrease = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count === 1 ? item.count = 1 : item.count -= 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.increase = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count += 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.getTotal = () => {\n      const {\n        cart\n      } = this.state;\n      const res = cart.reduce((prev, item) => {\n        return prev + item.price * item.count;\n      }, 0);\n      this.setState({\n        total: res\n      });\n    };\n\n    this.removeProduct = id => {\n      if (window.confirm(\"Do you want to delete this product?\")) {\n        const {\n          cart\n        } = this.state;\n        cart.forEach((item, index) => {\n          if (item._id === id) {\n            cart.splice(index, 1);\n          }\n        });\n        this.setState({\n          cart: cart\n        });\n        this.getTotal();\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\n    localStorage.setItem('dataTotal', JSON.stringify(this.state.total));\n  }\n\n  componentDidMount() {\n    const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n\n    if (dataCart !== null) {\n      this.setState({\n        cart: dataCart\n      });\n    }\n\n    const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n\n    if (dataTotal !== null) {\n      this.setState({\n        total: dataTotal\n      });\n    }\n  }\n\n  render() {\n    const {\n      products,\n      cart,\n      total\n    } = this.state;\n    const {\n      addCart,\n      decrease,\n      increase,\n      removeProduct,\n      getTotal\n    } = this;\n    return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        products,\n        addCart,\n        cart,\n        decrease,\n        increase,\n        removeProduct,\n        total,\n        getTotal\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/macuser/Desktop/ОКОНЧАТЕЛЬНЫЙ РАБОЧИЙ ВАРИАНТ/OnlineStore/src/main/js/src/components/Context.js"],"names":["React","Component","DataContext","createContext","DataProvider","state","products","cart","total","fetchProducts","fetch","then","response","json","data","console","log","addCart","id","check","every","item","_id","filter","product","setState","alert","decrease","forEach","count","getTotal","increase","res","reduce","prev","price","removeProduct","window","confirm","index","splice","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","dataCart","parse","getItem","dataTotal","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './css/Order.css';\n\n\nexport const DataContext = React.createContext();\n\nexport class DataProvider extends Component {\n\n\n    \n    state = {\n        products: [],\n        cart: [],\n        total: 0\n    }\n\n    fetchProducts = () => {\n        fetch('https://online-store-120.herokuapp.com/store/products')\n        .then((response) => response.json())\n        .then(data => {\n            console.log({ products: data});\n        });\n    }\n\n    addCart = (id) => {\n        const { products, cart } = this.state;\n        const check = cart.every(item => {\n            return item._id !== id\n        })\n        if (check) {\n            const data = products.filter(product => {\n                return product._id === id\n            })\n            this.setState({ cart: [...cart, ...data] })\n        } else {\n            alert(\"The product has been added to cart.\")\n            // <Alert severity=\"success\">The product has been added to cart.</Alert>\n        }\n    };\n\n    decrease = id => {\n        const { cart } = this.state;\n        cart.forEach(item => {\n            if (item._id === id) {\n                item.count === 1 ? item.count = 1 : item.count -= 1;\n            }\n        })\n        this.setState({ cart: cart });\n        this.getTotal();\n    }\n\n    increase = id => {\n        const { cart } = this.state;\n        cart.forEach(item => {\n            if (item._id === id) {\n                item.count += 1;\n            }\n        })\n        this.setState({ cart: cart });\n        this.getTotal();\n    }\n\n    getTotal = () => {\n        const { cart } = this.state;\n        const res = cart.reduce((prev, item) => {\n            return prev + (item.price * item.count);\n        }, 0)\n        this.setState({ total: res })\n    }\n\n    removeProduct = id => {\n        if (window.confirm(\"Do you want to delete this product?\")) {\n            const { cart } = this.state;\n            cart.forEach((item, index) => {\n                if (item._id === id) {\n                    cart.splice(index, 1)\n                }\n            })\n            this.setState({ cart: cart })\n            this.getTotal();\n        }\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n    }\n\n    componentDidMount() {\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n        if (dataCart !== null) {\n            this.setState({ cart: dataCart });\n        }\n\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n        if (dataTotal !== null) {\n            this.setState({ total: dataTotal });\n        }\n    }\n\n    render() {\n        const { products, cart, total } = this.state;\n        const { addCart, decrease, increase, removeProduct, getTotal } = this;\n        return (\n            <DataContext.Provider value={{ products, addCart, cart, decrease, increase, removeProduct, total, getTotal }}>\n                {this.props.children}\n            </DataContext.Provider>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}