{"ast":null,"code":"// import React, { Component } from 'react';\n// import './css/Order.css';\n// export const DataContext = React.createContext();\n// export class DataProvider extends Component {\n//     state = {\n//         products: [],\n//         cart: [],\n//         total: 0\n//     }\n//     fetchProducts = () => {\n//         fetch('https://online-store-120.herokuapp.com/store/products')\n//         .then((response) => response.json())\n//         .then(DataContext => {\n//             this.setState({ products: DataContext});\n//         });\n//     }\n//     addCart = (id) => {\n//         const { products, cart } = this.state;\n//         const check = cart.every(item => {\n//             return item._id !== id\n//         })\n//         if (check) {\n//             const data = products.filter(product => {\n//                 return product._id === id\n//             })\n//             this.setState({ cart: [...cart, ...data] })\n//         } else {\n//             alert(\"The product has been added to cart.\")\n//             // <Alert severity=\"success\">The product has been added to cart.</Alert>\n//         }\n//     };\n//     decrease = id => {\n//         const { cart } = this.state;\n//         cart.forEach(item => {\n//             if (item._id === id) {\n//                 item.count === 1 ? item.count = 1 : item.count -= 1;\n//             }\n//         })\n//         this.setState({ cart: cart });\n//         this.getTotal();\n//     }\n//     increase = id => {\n//         const { cart } = this.state;\n//         cart.forEach(item => {\n//             if (item._id === id) {\n//                 item.count += 1;\n//             }\n//         })\n//         this.setState({ cart: cart });\n//         this.getTotal();\n//     }\n//     getTotal = () => {\n//         const { cart } = this.state;\n//         const res = cart.reduce((prev, item) => {\n//             return prev + (item.price * item.count);\n//         }, 0)\n//         this.setState({ total: res })\n//     }\n//     removeProduct = id => {\n//         if (window.confirm(\"Do you want to delete this product?\")) {\n//             const { cart } = this.state;\n//             cart.forEach((item, index) => {\n//                 if (item._id === id) {\n//                     cart.splice(index, 1)\n//                 }\n//             })\n//             this.setState({ cart: cart })\n//             this.getTotal();\n//         }\n//     }\n//     componentDidUpdate() {\n//         localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n//         localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n//     }\n//     componentDidMount() {\n//         const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n//         if (dataCart !== null) {\n//             this.setState({ cart: dataCart });\n//         }\n//         const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n//         if (dataTotal !== null) {\n//             this.setState({ total: dataTotal });\n//         }\n//     }\n//     render() {\n//         const { products, cart, total } = this.state;\n//         const { addCart, decrease, increase, removeProduct, getTotal } = this;\n//         return (\n//             <DataContext.Provider value={{ products, addCart, cart, decrease, increase, removeProduct, total, getTotal }}>\n//                 {this.props.children}\n//             </DataContext.Provider>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/macuser/Desktop/ОКОНЧАТЕЛЬНЫЙ РАБОЧИЙ ВАРИАНТ/OnlineStore/src/main/js/src/components/Context.js"],"names":[],"mappings":"AAAA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// import './css/Order.css';\n\n\n// export const DataContext = React.createContext();\n\n// export class DataProvider extends Component {\n\n//     state = {\n//         products: [],\n//         cart: [],\n//         total: 0\n//     }\n\n//     fetchProducts = () => {\n//         fetch('https://online-store-120.herokuapp.com/store/products')\n//         .then((response) => response.json())\n//         .then(DataContext => {\n//             this.setState({ products: DataContext});\n//         });\n//     }\n\n//     addCart = (id) => {\n//         const { products, cart } = this.state;\n//         const check = cart.every(item => {\n//             return item._id !== id\n//         })\n//         if (check) {\n//             const data = products.filter(product => {\n//                 return product._id === id\n//             })\n//             this.setState({ cart: [...cart, ...data] })\n//         } else {\n//             alert(\"The product has been added to cart.\")\n//             // <Alert severity=\"success\">The product has been added to cart.</Alert>\n//         }\n//     };\n\n//     decrease = id => {\n//         const { cart } = this.state;\n//         cart.forEach(item => {\n//             if (item._id === id) {\n//                 item.count === 1 ? item.count = 1 : item.count -= 1;\n//             }\n//         })\n//         this.setState({ cart: cart });\n//         this.getTotal();\n//     }\n\n//     increase = id => {\n//         const { cart } = this.state;\n//         cart.forEach(item => {\n//             if (item._id === id) {\n//                 item.count += 1;\n//             }\n//         })\n//         this.setState({ cart: cart });\n//         this.getTotal();\n//     }\n\n//     getTotal = () => {\n//         const { cart } = this.state;\n//         const res = cart.reduce((prev, item) => {\n//             return prev + (item.price * item.count);\n//         }, 0)\n//         this.setState({ total: res })\n//     }\n\n//     removeProduct = id => {\n//         if (window.confirm(\"Do you want to delete this product?\")) {\n//             const { cart } = this.state;\n//             cart.forEach((item, index) => {\n//                 if (item._id === id) {\n//                     cart.splice(index, 1)\n//                 }\n//             })\n//             this.setState({ cart: cart })\n//             this.getTotal();\n//         }\n//     }\n\n//     componentDidUpdate() {\n//         localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n//         localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n//     }\n\n//     componentDidMount() {\n//         const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n//         if (dataCart !== null) {\n//             this.setState({ cart: dataCart });\n//         }\n\n//         const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n//         if (dataTotal !== null) {\n//             this.setState({ total: dataTotal });\n//         }\n//     }\n\n//     render() {\n//         const { products, cart, total } = this.state;\n//         const { addCart, decrease, increase, removeProduct, getTotal } = this;\n//         return (\n//             <DataContext.Provider value={{ products, addCart, cart, decrease, increase, removeProduct, total, getTotal }}>\n//                 {this.props.children}\n//             </DataContext.Provider>\n//         )\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}