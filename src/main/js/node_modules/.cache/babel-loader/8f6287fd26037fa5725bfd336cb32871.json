{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/src/components/section/Registration/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Grid, Typography, Avatar, TextField } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { NavLink, Link } from 'react-router-dom';\nimport './Login.css';\nimport { Button } from 'react-bootstrap';\nimport { UserContext } from './UserProvider';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { FormHelperText } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const {\n    handleSubmit,\n    setEmail,\n    setPassword,\n    handleShow\n  } = useContext(UserContext);\n  const paperStyle = {\n    margin: '0 auto'\n  };\n  const btnstyle = {\n    marginTop: '8px',\n    marginBottom: '8px'\n  };\n  const initialValues = {\n    password: '',\n    confirmPassword: ''\n  };\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().min(8, \"Password minimum length should be 8\").required(\"Required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\")], \"Password not matched\").required(\"Required\")\n  });\n\n  const submitResetPassword = (values, props) => {\n    console.log(values);\n    console.log(props);\n    fetch('https://online-store-120.herokuapp.com/reset_password', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    }).then(() => {\n      console.log('new data added: ', values);\n      localStorage.setItem('new data added: ', JSON.stringify(values));\n      history.push({\n        pathname: \"/user\",\n        state: {\n          values: values\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('user-info')) {\n      history.push(\"/user\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userStyle\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          className: \"paperStyle\",\n          style: paperStyle,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            fullWidth: true,\n            name: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            fullWidth: true,\n            name: \"confirmPassword\",\n            type: \"password\",\n            label: \"Confirm Passord\",\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"confirmPassword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"dark\",\n            style: btnstyle,\n            className: \"btn-block\",\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ResetPassword, \"2YAGIIpmdtT6D71Kqytbs8kpfYc=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/src/components/section/Registration/ResetPassword.js"],"names":["React","useContext","Grid","Typography","Avatar","TextField","LockOutlinedIcon","NavLink","Link","Button","UserContext","Formik","Field","Form","ErrorMessage","FormHelperText","Yup","ResetPassword","handleSubmit","setEmail","setPassword","handleShow","paperStyle","margin","btnstyle","marginTop","marginBottom","initialValues","password","confirmPassword","validationSchema","object","shape","string","min","required","oneOf","ref","submitResetPassword","values","props","console","log","fetch","method","headers","body","JSON","stringify","then","localStorage","setItem","history","push","pathname","state","useEffect","getItem","onSubmit"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { Grid, Typography, Avatar, TextField } from '@material-ui/core'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { NavLink, Link } from 'react-router-dom'\nimport './Login.css'\nimport { Button } from 'react-bootstrap'\nimport { UserContext } from './UserProvider'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport { FormHelperText } from '@material-ui/core'\nimport * as Yup from 'yup'\n\n\nconst ResetPassword = () => {\n    const { handleSubmit, setEmail, setPassword, handleShow } = useContext(UserContext)\n\n    const paperStyle = { margin: '0 auto' }\n    const btnstyle = { marginTop: '8px', marginBottom: '8px' }\n\n    const initialValues = {\n        password: '',\n        confirmPassword: '',\n    }\n\n    const validationSchema = Yup.object().shape({\n        password: Yup.string().min(8, \"Password minimum length should be 8\").required(\"Required\"),\n        confirmPassword: Yup.string().oneOf([Yup.ref(\"password\")], \"Password not matched\").required(\"Required\"),\n    })\n\n    const submitResetPassword = (values, props) => {\n        console.log(values)\n        console.log(props)\n\n        fetch('https://online-store-120.herokuapp.com/reset_password', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(values)\n        }).then(() => {\n            console.log('new data added: ', values)\n            localStorage.setItem('new data added: ', JSON.stringify(values))\n            history.push({ pathname: \"/user\", state: { values: values } })\n        })\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem('user-info')) {\n            history.push(\"/user\")\n        }\n    }, [])\n\n    return (\n        <>\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n                {(props) => (\n                    <div className=\"userStyle\">\n                        <Form onSubmit={handleSubmit} className='paperStyle' style={paperStyle}>\n                            <Grid align='center'>\n                                <h2>Reset Password</h2>\n                            </Grid>\n                            <Field as={TextField} fullWidth name=\"password\" type='password' label='Password'\n                                helperText={<ErrorMessage name=\"password\" />} />\n                            <Field as={TextField} fullWidth name=\"confirmPassword\" type='password' label='Confirm Passord'\n                                helperText={<ErrorMessage name=\"confirmPassword\" />} />\n                            <Button type='submit' variant='dark' style={btnstyle} className=\"btn-block\">Change Password</Button>\n                        </Form>\n                    </div>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}