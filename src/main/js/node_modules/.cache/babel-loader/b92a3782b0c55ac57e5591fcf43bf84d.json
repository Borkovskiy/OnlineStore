{"ast":null,"code":"import _slicedToArray from\"E:/\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442/01.09 original/OnlineStore/src/main/js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{Grid,Typography,Avatar,TextField}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import LockOutlinedIcon from'@material-ui/icons/LockOutlined';import{NavLink,Link,useHistory}from'react-router-dom';import'./Login.css';import{Modal,Button,Form}from'react-bootstrap';import{UserContext}from'./UserProvider';import{ModalForgot}from'./ModalForgot';import GoogleButton from'react-google-button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:'calc(80% - 12px)',maxWidth:'650px',height:'33rem',border:'1px solid #eee',overflow:'hidden',padding:'10px',boxShadow:'2px 8px 20px #ddd',margin:'10px auto',transition:'0.5 linear',alignItems:'center','& > * + *':{marginTop:theme.spacing(2)}}};});var ResetPassword=function ResetPassword(){var paperStyle={margin:'0 auto'};var btnstyle={marginTop:'8px',marginBottom:'20px'};var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var history=useHistory();var classes=useStyles();// const handleResetPassword = (e) => {\n//     e.preventDefault();\n//     const data = { password };\n//     const authResult = new URLSearchParams(window.location.search);\n//     const token = authResult.get('token')\n//     fetch('new_password', {\n//         method: 'POST',\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(data)\n//     }).then(() => {\n//         console.log('password: ', data)\n//         history.push(\"/login\")\n//     })\n// }\nvar handleResetPassword=function handleResetPassword(e){e.preventDefault();var authResult=new URLSearchParams(window.location.search);var token=authResult.get('token');var data={password:password,token:token};fetch('new_password',{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(){console.log(data);history.push(\"/login\");});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleResetPassword,className:\"paperStyle\",style:paperStyle,children:[/*#__PURE__*/_jsx(Grid,{align:\"center\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"})}),/*#__PURE__*/_jsx(TextField,{type:\"Password\",label:\"Password\",placeholder:\"Enter your new Password\",onChange:function onChange(e){return setPassword(e.target.value);},fullWidth:true,required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"dark\",style:btnstyle,className:\"btn-block\",children:\"Change Password\"})]})})});};export default ResetPassword;","map":{"version":3,"sources":["E:/проект/01.09 original/OnlineStore/src/main/js/src/components/section/Registration/ResetPassword.js"],"names":["React","useContext","useState","Grid","Typography","Avatar","TextField","makeStyles","LockOutlinedIcon","NavLink","Link","useHistory","Modal","Button","Form","UserContext","ModalForgot","GoogleButton","useStyles","theme","root","width","maxWidth","height","border","overflow","padding","boxShadow","margin","transition","alignItems","marginTop","spacing","ResetPassword","paperStyle","btnstyle","marginBottom","password","setPassword","history","classes","handleResetPassword","e","preventDefault","authResult","URLSearchParams","window","location","search","token","get","data","fetch","method","headers","body","JSON","stringify","then","console","log","push","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { Grid, Typography, Avatar, TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { NavLink, Link, useHistory } from 'react-router-dom'\r\nimport './Login.css'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport { UserContext } from './UserProvider'\r\nimport { ModalForgot } from './ModalForgot'\r\nimport GoogleButton from 'react-google-button'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 'calc(80% - 12px)',\r\n      maxWidth: '650px',\r\n      height: '33rem',\r\n      border: '1px solid #eee',\r\n      overflow: 'hidden',\r\n      padding: '10px',\r\n      boxShadow: '2px 8px 20px #ddd',\r\n      margin: '10px auto',\r\n      transition: '0.5 linear',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst ResetPassword = () => {\r\n    const paperStyle = { margin: '0 auto' }\r\n    const btnstyle = { marginTop: '8px', marginBottom: '20px' }\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const history = useHistory()\r\n\r\n    const classes = useStyles();\r\n\r\n    // const handleResetPassword = (e) => {\r\n    //     e.preventDefault();\r\n    //     const data = { password };\r\n    //     const authResult = new URLSearchParams(window.location.search);\r\n    //     const token = authResult.get('token')\r\n\r\n    //     fetch('new_password', {\r\n    //         method: 'POST',\r\n    //         headers: { \"Content-Type\": \"application/json\" },\r\n    //         body: JSON.stringify(data)\r\n    //     }).then(() => {\r\n    //         console.log('password: ', data)\r\n    //         history.push(\"/login\")\r\n    //     })\r\n    // }\r\n\r\n    const handleResetPassword = (e) => {\r\n        e.preventDefault();\r\n        const authResult = new URLSearchParams(window.location.search);\r\n        const token = authResult.get('token')\r\n        const data = { password, token };\r\n\r\n        fetch('new_password', {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(data)\r\n        }).then(() => {\r\n\r\n            console.log(data)\r\n            history.push(\"/login\")\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <form onSubmit={handleResetPassword} className='paperStyle' style={paperStyle}>\r\n                    <Grid align='center'>\r\n                        <h2>Reset Password</h2>\r\n                    </Grid>\r\n                    <TextField type='Password' label='Password' placeholder='Enter your new Password' onChange={(e) => setPassword(e.target.value)} fullWidth required />\r\n                    {/* <TextField type='password' label='Confirm Password' placeholder='Confirm your new password' fullWidth required /> */}\r\n                    <Button type='submit' variant='dark' style={btnstyle} className=\"btn-block\">Change Password</Button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}