{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/src/components/section/Registration/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Typography, Avatar, TextField, Checkbox, FormControlLabel, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Google } from './Google';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const paperStyle = {\n    margin: '0 auto'\n  };\n  const avatarStyle = {\n    backgroundColor: 'lightseagreen'\n  };\n  const btnstyle = {\n    marginTop: '8px',\n    marginBottom: '8px'\n  };\n  const linkButton = {\n    marginTop: '8px'\n  };\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem('user')) {\n      history.push(\"/user\");\n    }\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      email,\n      password\n    };\n    fetch('login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(() => {\n      notification.success({\n        message: \"login successfu\"\n      });\n      console.log('new data added: ', data);\n      localStorage.setItem('new data added: ', JSON.stringify(data));\n      history.push({\n        pathname: \"/user\",\n        state: {\n          data: data\n        }\n      });\n    }); // setData(response.data)\n    // localStorage.setItem('')\n  };\n\n  if (localStorage.getItem('user')) {\n    alert(\"You can't login if you are logged in!\");\n    history.push('/user');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"paperStyle\",\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: avatarStyle,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"email\",\n        label: \"Email\",\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        label: \"Password\",\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter your password\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        style: btnstyle,\n        fullWidth: true,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/oauth2/authorization/google\",\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          style: linkButton,\n          children: \"Forget password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\" Do you have an account?\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          component: Link,\n          to: \"/signup\",\n          children: \"Sign up?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"e+LHDSN6Hm7qpQe7wrfPMvXsqwc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/src/components/section/Registration/Login.js"],"names":["React","useState","useEffect","Grid","Typography","Avatar","TextField","Checkbox","FormControlLabel","Button","LockOutlinedIcon","Link","useHistory","Google","Login","paperStyle","margin","avatarStyle","backgroundColor","btnstyle","marginTop","marginBottom","linkButton","email","setEmail","password","setPassword","data","setData","history","localStorage","getItem","push","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","notification","success","message","console","log","setItem","pathname","state","alert","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Grid, Typography, Avatar, TextField, Checkbox, FormControlLabel, Button } from '@material-ui/core'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Link, useHistory } from 'react-router-dom'\nimport { Google } from './Google'\nimport './Login.css'\n\n\nconst Login = () => {\n    const paperStyle = { margin: '0 auto' }\n    const avatarStyle = { backgroundColor: 'lightseagreen' }\n    const btnstyle = { marginTop: '8px', marginBottom: '8px' }\n    const linkButton = { marginTop: '8px' }\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\")\n    const [data, setData] = useState()\n    const history = useHistory();\n\n    useEffect(() => {\n        if (localStorage.getItem('user')) {\n            history.push(\"/user\")\n        }\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = { email, password };\n\n        fetch('login', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data)\n        }).then(() => {\n            notification.success({\n                message: \"login successfu\"\n            })\n            console.log('new data added: ', data)\n            localStorage.setItem('new data added: ', JSON.stringify(data))\n            history.push({ pathname: \"/user\", state: { data: data } })\n        })\n        // setData(response.data)\n        // localStorage.setItem('')\n    }\n\n    if (localStorage.getItem('user')) {\n        alert(\"You can't login if you are logged in!\")\n        history.push('/user')\n    }\n\n    return (\n        <Grid>\n            <form onSubmit={handleSubmit} className='paperStyle' style={paperStyle}>\n                <Grid align='center'>\n                    <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>\n                    <h2>Login</h2>\n                </Grid>\n                <TextField type='email' label='Email' onChange={(e) => setEmail(e.target.value)} placeholder='Enter your email' fullWidth required />\n                <TextField type='password' label='Password' onChange={(e) => setPassword(e.target.value)} placeholder='Enter your password' fullWidth required />\n                {/* <FormControlLabel\n                    control={\n                        <Checkbox\n                            name=\"checkedB\"\n                            color=\"Remember me\"\n                        />\n                    }\n                    label=\"Primary\"\n                /> */}\n                <Button type='submit' color='primary' variant='contained' style={btnstyle} fullWidth>Log in</Button>\n                <a href=\"/oauth2/authorization/google\">Sign in with Google</a>\n                <Typography>\n                    <a href=\"#\" style={linkButton}>\n                        Forget password?\n                    </a>\n                </Typography>\n                <Typography> Do you have an account?&nbsp;\n                    <Button component={Link} to=\"/signup\">Sign up?</Button>\n                </Typography>\n            </form>\n        </Grid>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}