{"ast":null,"code":"import _objectSpread from\"/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useState,useEffect}from'react';import{InputLabel,Select,MenuItem,Button,Grid,Typography}from'@material-ui/core';import{useForm,FormProvider}from'react-hook-form';import{Country,City}from'country-state-city';import{Link}from'react-router-dom';import FormInput from'./FormInput';import'./Payment.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddressForm=function AddressForm(_ref){var next=_ref.next;var methods=useForm();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cities=_useState4[0],setCities=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),selectedCountry=_useState6[0],setSelectedCountry=_useState6[1];var _useState7=useState({country:'',city:''}),_useState8=_slicedToArray(_useState7,2),location=_useState8[0],setLocation=_useState8[1];useEffect(function(){setCountries(Country.getAllCountries());},[]);var selectCountry=function selectCountry(e){var _countries$filter$;var value=e.target.value;setSelectedCountry(value);setCities(City.getCitiesOfCountry(value));var countryName=(_countries$filter$=countries.filter(function(el){return el.isoCode===value;})[0])===null||_countries$filter$===void 0?void 0:_countries$filter$.name;setLocation(_objectSpread(_objectSpread({},location),{},{country:countryName,city:''}));};var selectCity=function selectCity(e){setLocation(_objectSpread(_objectSpread({},location),{},{city:e.target.value}));};return/*#__PURE__*/_jsxs(\"div\",{value:{location:location,setLocation:setLocation},style:{margin:\"30px\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"center\"},children:\"Payment\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,style:{margin:'10px 0'},children:\"Shipping Address\"}),/*#__PURE__*/_jsx(FormProvider,_objectSpread(_objectSpread({},methods),{},{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:methods.handleSubmit(function(data){return next(_objectSpread({},data));}),children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(FormInput,{required:true,name:\"firstName\",label:\"First name\"}),/*#__PURE__*/_jsx(FormInput,{required:true,name:\"lastName\",label:\"Last name\"}),/*#__PURE__*/_jsx(FormInput,{required:true,name:\"address1\",label:\"Address\"}),/*#__PURE__*/_jsx(FormInput,{required:true,name:\"email\",label:\"Email\"}),/*#__PURE__*/_jsx(FormInput,{required:true,name:\"region\",label:\"Region\"}),/*#__PURE__*/_jsx(FormInput,{required:true,name:\"zip\",label:\"ZIP / Postal code\"}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Shipping Country\"}),/*#__PURE__*/_jsx(Select,{required:true,onChange:selectCountry,fullWidth:true,labelId:\"countries\",id:\"select\",children:countries.map(function(el){return/*#__PURE__*/_jsx(MenuItem,{value:el.isoCode,children:el.name},el.isoCode);})})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Select your city\"}),selectedCountry?/*#__PURE__*/_jsx(Select,{required:true,onChange:selectCity,fullWidth:true,children:cities.map(function(el){return/*#__PURE__*/_jsx(MenuItem,{value:el.name,children:el.name},el.name+'_'+el.stateCode);})}):'']})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:'address',style:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"button\",{component:Link,to:\"/cart\",variant:\"outlined\",children:\"Back to Cart\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",variant:\"contained\",color:\"primary\",children:\"Next\"})]})]})}))]});};export default AddressForm;","map":{"version":3,"sources":["/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/src/components/section/Payment/AddressForm.js"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","Country","City","Link","FormInput","AddressForm","next","methods","countries","setCountries","cities","setCities","selectedCountry","setSelectedCountry","country","city","location","setLocation","getAllCountries","selectCountry","e","value","target","getCitiesOfCountry","countryName","filter","el","isoCode","name","selectCity","margin","textAlign","handleSubmit","data","map","stateCode","display","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Country, City } from 'country-state-city';\nimport {Link} from 'react-router-dom'\nimport FormInput from './FormInput';\nimport './Payment.css'\n\nconst AddressForm = ({next}) => {\n    const methods = useForm();\n\n    const [countries, setCountries] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [location, setLocation] = useState({\n        country: '',\n        city: ''\n    })\n    useEffect(() => {\n        setCountries(Country.getAllCountries());\n    }, [])\n\n    const selectCountry = e => {\n        let value = e.target.value;\n        setSelectedCountry(value);\n        setCities(City.getCitiesOfCountry(value));\n        let countryName = countries.filter(el => el.isoCode === value)[0]?.name;\n        setLocation({ ...location, country: countryName, city: '' })\n    }\n\n    const selectCity = e => {\n        setLocation({ ...location, city: e.target.value });\n    }\n\n    return (\n        <div value={{ location, setLocation }} style={{ margin: \"30px\" }}>\n            <h3 style={{ textAlign: \"center\" }}>Payment</h3>\n            <Typography variant=\"h6\" gutterBottom style={{margin: '10px 0'}}>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data }) )}>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First name' />\n                        <FormInput required name='lastName' label='Last name' />\n                        <FormInput required name='address1' label='Address' />\n                        <FormInput required name='email' label='Email' />\n                        <FormInput required name='region' label='Region' />\n                        <FormInput required name='zip' label='ZIP / Postal code' />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select required onChange={selectCountry} fullWidth labelId=\"countries\" id=\"select\">\n                            {countries.map(el => <MenuItem key={el.isoCode} value={el.isoCode}>{el.name}</MenuItem>)}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Select your city</InputLabel>\n                            {selectedCountry ? <Select required onChange={selectCity} fullWidth>\n                                {cities.map(el => <MenuItem key={el.name + '_' + el.stateCode} value={el.name}>{el.name}</MenuItem>)}\n                            </Select> : ''}\n                        </Grid>\n                    </Grid>\n                    <br/>\n                    <div className={'address'} style={{display: 'flex', justifyContent: 'space-between' }}>\n                        <button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</button>\n                        <button type=\"submit\" variant=\"contained\" color=\"primary\">Next</button>\n                    </div>\n                </form>\n            </FormProvider>\n        </div>\n    )\n}\n\nexport default AddressForm\n"]},"metadata":{},"sourceType":"module"}