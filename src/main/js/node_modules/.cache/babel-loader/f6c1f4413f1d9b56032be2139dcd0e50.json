{"ast":null,"code":"import _slicedToArray from\"/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{createContext}from'react';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";export var UserContext=/*#__PURE__*/createContext();export var UserProvider=function UserProvider(props){var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),currentEmail=_useState6[0],setCurrentEmail=_useState6[1];// const getCurrentUser = () => {\n//     fetch('https://online-store-120.herokuapp.com/user', {\n//         method: 'GET',\n//         credentials: 'same-origin'\n//     }).then(res => res.json())\n//     .then(res => setCurrentEmail(res.data))\n//     .catch(res => console.log(res))\n// }\nvar getCurrentUser=function getCurrentUser(){return fetch('https://online-store-120.herokuapp.com/user').then(function(res){return res.json();});};useEffect(function(){getCurrentUser().then(function(currentEmail){return setCurrentEmail(currentEmail);});},[]);var handleSubmit=function handleSubmit(e){e.preventDefault();var data={email:email,password:password};fetch('https://online-store-120.herokuapp.com/login',{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(){console.log('user-info: ',data);localStorage.setItem('user-info: ',JSON.stringify(data));getCurrentUser();history.push(\"/user\");});};return/*#__PURE__*/_jsx(UserContext.Provider,{value:{email:email,currentEmail:currentEmail,handleSubmit:handleSubmit,setEmail:setEmail,setPassword:setPassword},children:props.children});};","map":{"version":3,"sources":["/Users/macuser/Desktop/Project Online-store/OnlineStore/src/main/js/src/components/section/Registration/UserProvider.js"],"names":["React","useState","useEffect","createContext","useHistory","UserContext","UserProvider","props","history","email","setEmail","password","setPassword","currentEmail","setCurrentEmail","getCurrentUser","fetch","then","res","json","handleSubmit","e","preventDefault","data","method","headers","body","JSON","stringify","console","log","localStorage","setItem","push","children"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,aAAT,KAA8B,OAA9B,CACA,OAAQC,UAAR,KAAyB,kBAAzB,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGF,aAAa,EAAjC,CAEP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAEnC,GAAIC,CAAAA,OAAO,CAAGJ,UAAU,EAAxB,CAEA,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOQ,KAAP,eAAcC,QAAd,eACA,eAAgCT,QAAQ,CAAC,EAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eAEA,eAAwCX,QAAQ,CAAC,EAAD,CAAhD,yCAAOY,YAAP,eAAqBC,eAArB,eAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SACnBC,CAAAA,KAAK,CAAC,6CAAD,CAAL,CAAqDC,IAArD,CAA0D,SAACC,GAAD,QAC1DA,CAAAA,GAAG,CAACC,IAAJ,EAD0D,EAA1D,CADmB,EAAvB,CAKAjB,SAAS,CAAC,UAAM,CACZa,cAAc,GAAGE,IAAjB,CAAsB,SAACJ,YAAD,QAAkBC,CAAAA,eAAe,CAACD,YAAD,CAAjC,EAAtB,EACH,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,IAAI,CAAG,CAAEd,KAAK,CAALA,KAAF,CAASE,QAAQ,CAARA,QAAT,CAAb,CAEAK,KAAK,CAAC,8CAAD,CAAiD,CAClDQ,MAAM,CAAE,MAD0C,CAElDC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFyC,CAGlDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAH4C,CAAjD,CAAL,CAIGN,IAJH,CAIQ,UAAM,CACVY,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BP,IAA3B,EACAQ,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoCL,IAAI,CAACC,SAAL,CAAeL,IAAf,CAApC,EACAR,cAAc,GACdP,OAAO,CAACyB,IAAR,CAAa,OAAb,EACH,CATD,EAUH,CAdD,CAgBA,mBACI,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAExB,KAAK,CAALA,KAAF,CAASI,YAAY,CAAZA,YAAT,CAAuBO,YAAY,CAAZA,YAAvB,CAAqCV,QAAQ,CAARA,QAArC,CAA+CE,WAAW,CAAXA,WAA/C,CAA7B,UACKL,KAAK,CAAC2B,QADX,EADJ,CAKH,CAhDM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { createContext } from 'react'\nimport {useHistory} from 'react-router-dom'\n\nexport const UserContext = createContext()\n\nexport const UserProvider = (props) => {\n\n    let history = useHistory()\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\")\n\n    const [currentEmail, setCurrentEmail] = useState(\"\")\n\n    // const getCurrentUser = () => {\n    //     fetch('https://online-store-120.herokuapp.com/user', {\n    //         method: 'GET',\n    //         credentials: 'same-origin'\n    //     }).then(res => res.json())\n    //     .then(res => setCurrentEmail(res.data))\n    //     .catch(res => console.log(res))\n    // }\n\n    const getCurrentUser = () => \n        fetch('https://online-store-120.herokuapp.com/user').then((res) =>\n        res.json()\n        )\n\n    useEffect(() => {\n        getCurrentUser().then((currentEmail) => setCurrentEmail(currentEmail));\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = { email, password };\n\n        fetch('https://online-store-120.herokuapp.com/login', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data)\n        }).then(() => {\n            console.log('user-info: ', data)\n            localStorage.setItem('user-info: ', JSON.stringify(data))\n            getCurrentUser()\n            history.push(\"/user\")\n        })\n    }\n\n    return (\n        <UserContext.Provider value={{ email, currentEmail, handleSubmit, setEmail, setPassword }}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}