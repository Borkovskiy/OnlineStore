{"ast":null,"code":"import _slicedToArray from\"E:/\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442/21.08.2021 new image/OnlineStore/src/main/js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Grid,Typography,Avatar,TextField,Checkbox,FormControlLabel,Button}from'@material-ui/core';import LockOutlinedIcon from'@material-ui/icons/LockOutlined';import{Link,useHistory}from'react-router-dom';import{Google}from'./Google';import'./Login.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var paperStyle={margin:'0 auto'};var avatarStyle={backgroundColor:'lightseagreen'};var btnstyle={marginTop:'8px',marginBottom:'8px'};var linkButton={marginTop:'8px'};var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var history=useHistory();var handleSubmit=function handleSubmit(e){e.preventDefault();var data={email:email,password:password};fetch('login',{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(){console.log('new data added: ',data);localStorage.setItem('new data added: ',JSON.stringify(data));history.push({pathname:\"/user\",state:{data:data}});});};useEffect(function(){if(localStorage.getItem('user')){history.push(\"/user\");}},[]);return/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"paperStyle\",style:paperStyle,children:[/*#__PURE__*/_jsxs(Grid,{align:\"center\",children:[/*#__PURE__*/_jsx(Avatar,{style:avatarStyle,children:/*#__PURE__*/_jsx(LockOutlinedIcon,{})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"})]}),/*#__PURE__*/_jsx(TextField,{type:\"email\",label:\"Email\",onChange:function onChange(e){return setEmail(e.target.value);},placeholder:\"Enter your email\",fullWidth:true,required:true}),/*#__PURE__*/_jsx(TextField,{type:\"password\",label:\"Password\",onChange:function onChange(e){return setPassword(e.target.value);},placeholder:\"Enter your password\",fullWidth:true,required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",variant:\"contained\",style:btnstyle,fullWidth:true,children:\"Log in\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/oauth2/authorization/google\",children:\"Sign in with Google\"}),/*#__PURE__*/_jsx(Typography,{children:/*#__PURE__*/_jsx(\"a\",{href:\"#\",style:linkButton,children:\"Forget password?\"})}),/*#__PURE__*/_jsxs(Typography,{children:[\" Do you have an account?\\xA0\",/*#__PURE__*/_jsx(Button,{component:Link,to:\"/signup\",children:\"Sign up?\"})]})]})});};export default Login;","map":{"version":3,"sources":["E:/проект/21.08.2021 new image/OnlineStore/src/main/js/src/components/section/Registration/Login.js"],"names":["React","useState","useEffect","Grid","Typography","Avatar","TextField","Checkbox","FormControlLabel","Button","LockOutlinedIcon","Link","useHistory","Google","Login","paperStyle","margin","avatarStyle","backgroundColor","btnstyle","marginTop","marginBottom","linkButton","email","setEmail","password","setPassword","history","handleSubmit","e","preventDefault","data","fetch","method","headers","body","JSON","stringify","then","console","log","localStorage","setItem","push","pathname","state","getItem","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, Typography, Avatar, TextField, Checkbox, FormControlLabel, Button } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Google } from './Google'\r\nimport './Login.css'\r\n\r\n\r\nconst Login = () => {\r\n    const paperStyle = {margin: '0 auto' }\r\n    const avatarStyle = { backgroundColor: 'lightseagreen' }\r\n    const btnstyle = {marginTop: '8px', marginBottom: '8px'}\r\n    const linkButton = {marginTop: '8px'}\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const data = { email, password };\r\n\r\n        fetch('login', {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(data)\r\n        }).then(() => {\r\n            console.log('new data added: ', data)\r\n            localStorage.setItem('new data added: ', JSON.stringify(data))\r\n            history.push({ pathname: \"/user\", state: { data: data } })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('user')) {\r\n            history.push(\"/user\")\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Grid>\r\n            <form onSubmit={handleSubmit} className='paperStyle' style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>\r\n                    <h2>Login</h2>\r\n                </Grid>\r\n                <TextField type='email' label='Email' onChange={(e) => setEmail(e.target.value)} placeholder='Enter your email' fullWidth required />\r\n                <TextField type='password' label='Password' onChange={(e) => setPassword(e.target.value)} placeholder='Enter your password' fullWidth required />\r\n                {/* <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            name=\"checkedB\"\r\n                            color=\"Remember me\"\r\n                        />\r\n                    }\r\n                    label=\"Primary\"\r\n                /> */}\r\n                <Button type='submit' color='primary' variant='contained' style={btnstyle} fullWidth>Log in</Button>\r\n                <a href=\"/oauth2/authorization/google\">Sign in with Google</a>\r\n                <Typography>\r\n                    <a href=\"#\" style={linkButton}>\r\n                        Forget password?\r\n                    </a>\r\n                </Typography>\r\n                <Typography> Do you have an account?&nbsp;\r\n                    <Button component={Link} to=\"/signup\">Sign up?</Button>\r\n                </Typography>\r\n            </form>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}