{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/\\u041E\\u041A\\u041E\\u041D\\u0427\\u0410\\u0422\\u0415\\u041B\\u042C\\u041D\\u042B\\u0418\\u0306 \\u0420\\u0410\\u0411\\u041E\\u0427\\u0418\\u0418\\u0306 \\u0412\\u0410\\u0420\\u0418\\u0410\\u041D\\u0422/OnlineStore/src/main/js/src/components/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, createContext } from 'react';\nimport './css/Order.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/React.createContext();\n\nfunction APIContextPDataProviderrovider({\n  children\n}) {\n  _s();\n\n  // Initialize state\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Fetch data\n\n  useEffect(() => {\n    let url = \"../db.json\";\n    axios.get(url).then(function (response) {\n      setData(response.data.machines);\n      setIsLoading(false);\n      console.log(response.data.machines);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(APIContextProvider, {\n    value: {\n      data\n    },\n    loading: isLoading,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n\n_s(APIContextPDataProviderrovider, \"cUIHirocPIQDoBhSWLVYEdhEgBU=\");\n\n_c = APIContextPDataProviderrovider;\nexport default APIContextProvider;\nexport class DataProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      total: 0\n    };\n\n    this.fetchProducts = () => {\n      fetch('https://online-store-120.herokuapp.com/store/products').then(response => response.json()).then(DataContext => {\n        this.setState({\n          products: DataContext\n        });\n      });\n    };\n\n    this.addCart = id => {\n      const {\n        products,\n        cart\n      } = this.state;\n      const check = cart.every(item => {\n        return item._id !== id;\n      });\n\n      if (check) {\n        const data = products.filter(product => {\n          return product._id === id;\n        });\n        this.setState({\n          cart: [...cart, ...data]\n        });\n      } else {\n        alert(\"The product has been added to cart.\"); // <Alert severity=\"success\">The product has been added to cart.</Alert>\n      }\n    };\n\n    this.decrease = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count === 1 ? item.count = 1 : item.count -= 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.increase = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count += 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.getTotal = () => {\n      const {\n        cart\n      } = this.state;\n      const res = cart.reduce((prev, item) => {\n        return prev + item.price * item.count;\n      }, 0);\n      this.setState({\n        total: res\n      });\n    };\n\n    this.removeProduct = id => {\n      if (window.confirm(\"Do you want to delete this product?\")) {\n        const {\n          cart\n        } = this.state;\n        cart.forEach((item, index) => {\n          if (item._id === id) {\n            cart.splice(index, 1);\n          }\n        });\n        this.setState({\n          cart: cart\n        });\n        this.getTotal();\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\n    localStorage.setItem('dataTotal', JSON.stringify(this.state.total));\n  }\n\n  componentDidMount() {\n    const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n\n    if (dataCart !== null) {\n      this.setState({\n        cart: dataCart\n      });\n    }\n\n    const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n\n    if (dataTotal !== null) {\n      this.setState({\n        total: dataTotal\n      });\n    }\n  }\n\n  render() {\n    const {\n      products,\n      cart,\n      total\n    } = this.state;\n    const {\n      addCart,\n      decrease,\n      increase,\n      removeProduct,\n      getTotal\n    } = this;\n    return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        products,\n        addCart,\n        cart,\n        decrease,\n        increase,\n        removeProduct,\n        total,\n        getTotal\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"APIContextPDataProviderrovider\");","map":{"version":3,"sources":["/Users/macuser/Desktop/ОКОНЧАТЕЛЬНЫЙ РАБОЧИЙ ВАРИАНТ/OnlineStore/src/main/js/src/components/Context.js"],"names":["React","useContext","useState","useEffect","createContext","axios","DataContext","APIContextPDataProviderrovider","children","data","setData","isLoading","setIsLoading","url","get","then","response","machines","console","log","catch","error","APIContextProvider","DataProvider","Component","state","products","cart","total","fetchProducts","fetch","json","setState","addCart","id","check","every","item","_id","filter","product","alert","decrease","forEach","count","getTotal","increase","res","reduce","prev","price","removeProduct","window","confirm","index","splice","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","dataCart","parse","getItem","dataTotal","render","props"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, createContext } from 'react';\nimport './css/Order.css';\nimport axios from \"axios\";\n\n\nconst DataContext = React.createContext();\n\nfunction APIContextPDataProviderrovider({ children }) {\n    // Initialize state\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n  \n    // Fetch data\n    useEffect(() => {\n      let url = \"../db.json\";\n      axios\n        .get(url)\n        .then(function (response) {\n          setData(response.data.machines);\n          setIsLoading(false);\n          console.log(response.data.machines);\n        })\n        .catch((error) => console.log(error));\n    }, []);\n  \n    return (\n      <APIContextProvider value={{ data }} loading={isLoading}>\n        {children}\n      </APIContextProvider>\n    );\n  }\n  \n  export default APIContextProvider;\n  \n\nexport class DataProvider extends Component {\n\n    state = {\n        products: [],\n        cart: [],\n        total: 0\n    }\n\n    fetchProducts = () => {\n        fetch('https://online-store-120.herokuapp.com/store/products')\n        .then((response) => response.json())\n        .then(DataContext => {\n            this.setState({ products: DataContext});\n        });\n    }\n\n    addCart = (id) => {\n        const { products, cart } = this.state;\n        const check = cart.every(item => {\n            return item._id !== id\n        })\n        if (check) {\n            const data = products.filter(product => {\n                return product._id === id\n            })\n            this.setState({ cart: [...cart, ...data] })\n        } else {\n            alert(\"The product has been added to cart.\")\n            // <Alert severity=\"success\">The product has been added to cart.</Alert>\n        }\n    };\n\n    decrease = id => {\n        const { cart } = this.state;\n        cart.forEach(item => {\n            if (item._id === id) {\n                item.count === 1 ? item.count = 1 : item.count -= 1;\n            }\n        })\n        this.setState({ cart: cart });\n        this.getTotal();\n    }\n\n    increase = id => {\n        const { cart } = this.state;\n        cart.forEach(item => {\n            if (item._id === id) {\n                item.count += 1;\n            }\n        })\n        this.setState({ cart: cart });\n        this.getTotal();\n    }\n\n    getTotal = () => {\n        const { cart } = this.state;\n        const res = cart.reduce((prev, item) => {\n            return prev + (item.price * item.count);\n        }, 0)\n        this.setState({ total: res })\n    }\n\n    removeProduct = id => {\n        if (window.confirm(\"Do you want to delete this product?\")) {\n            const { cart } = this.state;\n            cart.forEach((item, index) => {\n                if (item._id === id) {\n                    cart.splice(index, 1)\n                }\n            })\n            this.setState({ cart: cart })\n            this.getTotal();\n        }\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n    }\n\n    componentDidMount() {\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n        if (dataCart !== null) {\n            this.setState({ cart: dataCart });\n        }\n\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n        if (dataTotal !== null) {\n            this.setState({ total: dataTotal });\n        }\n    }\n\n    render() {\n        const { products, cart, total } = this.state;\n        const { addCart, decrease, increase, removeProduct, getTotal } = this;\n        return (\n            <DataContext.Provider value={{ products, addCart, cart, decrease, increase, removeProduct, total, getTotal }}>\n                {this.props.children}\n            </DataContext.Provider>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}