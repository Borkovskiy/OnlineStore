{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Diplom project/online-store/src/components/section/Payment/AddressForm.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { InputLabel, Select, MuneItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './FormInput';\nimport { Country, City } from 'country-state-city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageContext = /*#__PURE__*/React.createContext();\nexport const PageContextProvider = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [countries, setCountries] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [location, setLocation] = useState({\n    country: '',\n    city: ''\n  });\n  useEffect(() => {\n    setCountries(Country.getAllCountries());\n  }, []);\n\n  const selectCountry = e => {\n    var _countries$filter$;\n\n    let value = e.target.value;\n    setSelectedCountry(value);\n    setCities(City.getCitiesOfCountry(value));\n    let countryName = (_countries$filter$ = countries.filter(el => el.isoCode === value)[0]) === null || _countries$filter$ === void 0 ? void 0 : _countries$filter$.name;\n    setLocation({ ...location,\n      country: countryName,\n      city: ''\n    });\n  };\n\n  const selectCity = e => {\n    setLocation({ ...location,\n      city: e.target.value\n    });\n  };\n\n  const AddressForm = () => {\n    _s();\n\n    const methods = useForm();\n    return /*#__PURE__*/_jsxDEV(PageContext.Provider, {\n      value: {\n        location,\n        setLocation\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: \"\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(FormInput, {\n                required: true,\n                name: \"firstName\",\n                label: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                required: true,\n                name: \"lastName\",\n                label: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                required: true,\n                name: \"address1\",\n                label: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                required: true,\n                name: \"email\",\n                label: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                required: true,\n                name: \"city\",\n                label: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                required: true,\n                name: \"zip\",\n                label: \"ZIP / Postal code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Shipping Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: 'mt-2',\n        children: \"Please select your location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectCountry,\n        className: 'my-3',\n        children: countries.map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: el.isoCode,\n          children: el.name\n        }, el.isoCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), selectedCountry ? /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectCity,\n        children: cities.map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: el.name,\n          children: el.name\n        }, el.name + '_' + el.stateCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }, this) : '', props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  };\n\n  _s(AddressForm, \"cLnp+zYVfnD49CnXGGXF3NvR6q8=\", false, function () {\n    return [useForm];\n  });\n};\n\n_s2(PageContextProvider, \"EaJROssNAyFdcWNOQbKUreWzvfE=\");\n\n_c = PageContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageContextProvider\");","map":{"version":3,"sources":["/Users/macuser/Desktop/Diplom project/online-store/src/components/section/Payment/AddressForm.js"],"names":["React","useEffect","useState","InputLabel","Select","MuneItem","Button","Grid","Typography","useForm","FormProvider","FormInput","Country","City","PageContext","createContext","PageContextProvider","props","countries","setCountries","cities","setCities","selectedCountry","setSelectedCountry","location","setLocation","country","city","getAllCountries","selectCountry","e","value","target","getCitiesOfCountry","countryName","filter","el","isoCode","name","selectCity","AddressForm","methods","margin","map","stateCode","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+CC,IAA/C,EAAqDC,UAArD,QAAuE,mBAAvE;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,iBAAtC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,oBAA9B;;AAEA,OAAO,MAAMC,WAAW,gBAAGd,KAAK,CAACe,aAAN,EAApB;AAEP,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC;AACrCwB,IAAAA,OAAO,EAAE,EAD4B;AAErCC,IAAAA,IAAI,EAAE;AAF+B,GAAD,CAAxC;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,YAAY,CAACP,OAAO,CAACgB,eAAR,EAAD,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AAAA;;AACvB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACAR,IAAAA,kBAAkB,CAACQ,KAAD,CAAlB;AACAV,IAAAA,SAAS,CAACR,IAAI,CAACoB,kBAAL,CAAwBF,KAAxB,CAAD,CAAT;AACA,QAAIG,WAAW,yBAAGhB,SAAS,CAACiB,MAAV,CAAiBC,EAAE,IAAIA,EAAE,CAACC,OAAH,KAAeN,KAAtC,EAA6C,CAA7C,CAAH,uDAAG,mBAAiDO,IAAnE;AACAb,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,OAAO,EAAEQ,WAAxB;AAAqCP,MAAAA,IAAI,EAAE;AAA3C,KAAD,CAAX;AACH,GAND;;AAQA,QAAMY,UAAU,GAAGT,CAAC,IAAI;AACpBL,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,MAAAA,IAAI,EAAEG,CAAC,CAACE,MAAF,CAASD;AAA9B,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMS,WAAW,GAAG,MAAM;AAAA;;AACtB,UAAMC,OAAO,GAAGhC,OAAO,EAAvB;AAEA,wBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEe,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAA7B;AAAA,8BACH;AAAK,QAAA,KAAK,EAAE;AAAEiB,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD,OAAkBD,OAAlB;AAAA,iCACI;AAAM,YAAA,QAAQ,EAAC,EAAf;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACI,QAAC,SAAD;AAAW,gBAAA,QAAQ,MAAnB;AAAoB,gBAAA,IAAI,EAAC,WAAzB;AAAqC,gBAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,SAAD;AAAW,gBAAA,QAAQ,MAAnB;AAAoB,gBAAA,IAAI,EAAC,UAAzB;AAAoC,gBAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,SAAD;AAAW,gBAAA,QAAQ,MAAnB;AAAoB,gBAAA,IAAI,EAAC,UAAzB;AAAoC,gBAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,SAAD;AAAW,gBAAA,QAAQ,MAAnB;AAAoB,gBAAA,IAAI,EAAC,OAAzB;AAAiC,gBAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI,QAAC,SAAD;AAAW,gBAAA,QAAQ,MAAnB;AAAoB,gBAAA,IAAI,EAAC,MAAzB;AAAgC,gBAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI,QAAC,SAAD;AAAW,gBAAA,QAAQ,MAAnB;AAAoB,gBAAA,IAAI,EAAC,KAAzB;AAA+B,gBAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAmBH;AAAI,QAAA,SAAS,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBG,eAoBH;AAAQ,QAAA,QAAQ,EAAEZ,aAAlB;AAAiC,QAAA,SAAS,EAAE,MAA5C;AAAA,kBACKX,SAAS,CAACyB,GAAV,CAAcP,EAAE,iBAAI;AAAyB,UAAA,KAAK,EAAEA,EAAE,CAACC,OAAnC;AAAA,oBAA6CD,EAAE,CAACE;AAAhD,WAAaF,EAAE,CAACC,OAAhB;AAAA;AAAA;AAAA;AAAA,gBAApB;AADL;AAAA;AAAA;AAAA;AAAA,cApBG,eAuBH;AAAA;AAAA;AAAA;AAAA,cAvBG,EAwBFf,eAAe,gBAAG;AAAQ,QAAA,QAAQ,EAAEiB,UAAlB;AAAA,kBACdnB,MAAM,CAACuB,GAAP,CAAWP,EAAE,iBAAI;AAA2C,UAAA,KAAK,EAAEA,EAAE,CAACE,IAArD;AAAA,oBAA4DF,EAAE,CAACE;AAA/D,WAAaF,EAAE,CAACE,IAAH,GAAU,GAAV,GAAgBF,EAAE,CAACQ,SAAhC;AAAA;AAAA;AAAA;AAAA,gBAAjB;AADc;AAAA;AAAA;AAAA;AAAA,cAAH,GAEJ,EA1BT,EA4BF3B,KAAK,CAAC4B,QA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AA8BH,GAjCD;;AAxB0C,KAwBpCL,WAxBoC;AAAA,YAyBtB/B,OAzBsB;AAAA;AA0D7C,CA1DM;;IAAMO,mB;;KAAAA,mB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { InputLabel, Select, MuneItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './FormInput';\nimport { Country, City } from 'country-state-city';\n\nexport const PageContext = React.createContext();\n\nexport const PageContextProvider = (props) => {\n    const [countries, setCountries] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [location, setLocation] = useState({\n        country: '',\n        city: ''\n    })\n    useEffect(() => {\n        setCountries(Country.getAllCountries());\n    }, [])\n\n    const selectCountry = e => {\n        let value = e.target.value;\n        setSelectedCountry(value);\n        setCities(City.getCitiesOfCountry(value));\n        let countryName = countries.filter(el => el.isoCode === value)[0]?.name;\n        setLocation({ ...location, country: countryName, city: '' })\n    }\n\n    const selectCity = e => {\n        setLocation({ ...location, city: e.target.value });\n    }\n\n    const AddressForm = () => {\n        const methods = useForm();\n\n        return <PageContext.Provider value={{ location, setLocation }}>\n            <div style={{ margin: \"30px\" }}>\n                <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n                <FormProvider {...methods}>\n                    <form onSubmit=''>\n                        <Grid container spacing={3}>\n                            <FormInput required name='firstName' label='First name' />\n                            <FormInput required name='lastName' label='Last name' />\n                            <FormInput required name='address1' label='Address' />\n                            <FormInput required name='email' label='Email' />\n                            <FormInput required name='city' label='City' />\n                            <FormInput required name='zip' label='ZIP / Postal code' />\n                            <Grid item xs={12} sm={6}>\n                                <InputLabel>Shipping Country</InputLabel>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </FormProvider>\n            </div>\n            <h4 className={'mt-2'}>Please select your location:</h4>\n            <select onChange={selectCountry} className={'my-3'}>\n                {countries.map(el => <option key={el.isoCode} value={el.isoCode}>{el.name}</option>)}\n            </select>\n            <br />\n            {selectedCountry ? <select onChange={selectCity}>\n                {cities.map(el => <option key={el.name + '_' + el.stateCode} value={el.name}>{el.name}</option>)}\n            </select> : ''}\n\n            {props.children}\n        </PageContext.Provider>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}